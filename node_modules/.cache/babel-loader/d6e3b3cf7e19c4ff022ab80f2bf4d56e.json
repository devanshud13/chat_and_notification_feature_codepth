{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth } from \"firebase/auth\";\n// import { getStorage } from \"firebase/storage\";\n// import { getFirestore } from \"firebase/firestore\";\n// const API_KEY = process.env.REACT_APP_FIREBASE_KEY\n// const firebaseConfig = {\n//   apiKey: API_KEY,\n//   authDomain: \"chat-engine-8dbde.firebaseapp.com\",\n//   projectId: \"chat-engine-8dbde\",\n//   storageBucket: \"chat-engine-8dbde.appspot.com\",\n//   messagingSenderId: \"654735497077\",\n//   appId: \"1:654735497077:web:e95d3917f9a3035db5653c\",\n//   measurementId: \"G-2355KSKVN7\"\n// };\n// export const app = initializeApp(firebaseConfig);\n// export const auth = getAuth();\n// export const storage = getStorage();\n// export const db = getFirestore()\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\"; // Import Firebase Messaging\n\nimport { useEffect } from \"react\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAhRXYsuWV9ga06Clz3fyadnCApOwuerWk\",\n  authDomain: \"chat-engine-8dbde.firebaseapp.com\",\n  projectId: \"chat-engine-8dbde\",\n  storageBucket: \"chat-engine-8dbde.appspot.com\",\n  messagingSenderId: \"654735497077\",\n  appId: \"1:654735497077:web:e95d3917f9a3035db5653c\",\n  measurementId: \"G-2355KSKVN7\"\n};\n\nconst requestNotificationPermission = async () => {\n  try {\n    const permission = await Notification.requestPermission();\n\n    if (permission === \"granted\") {\n      console.log(\"Notification permission granted.\");\n    } else {\n      console.log(\"Notification permission denied.\");\n    }\n  } catch (error) {\n    console.error(\"Error requesting notification permission:\", error);\n  }\n};\n\nrequestNotificationPermission(); // Initialize Firebase\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const storage = getStorage();\nexport const db = getFirestore(); // Initialize Firebase Messaging\n\nconst messaging = getMessaging(); // Request permission to receive notifications\n// Get the FCM token for the user\n\nconst getFCMToken = async () => {\n  try {\n    const token = await getToken(messaging);\n    console.log(\"FCM Token:\", token);\n  } catch (error) {\n    console.error(\"Error getting FCM token:\", error);\n  }\n}; // Handle incoming notifications\n\n\nconst handleNotifications = () => {\n  onMessage(messaging, payload => {\n    console.log(\"Received a notification:\", payload); // You can customize how to handle the incoming notification here\n    // For example, display a notification to the user\n\n    const {\n      title,\n      body\n    } = payload.notification;\n    new Notification(title, {\n      body\n    });\n  });\n}; // Component to initialize notification setup\n\n\nconst FirebaseNotificationSetup = () => {\n  _s();\n\n  useEffect(() => {\n    requestNotificationPermission();\n    getFCMToken();\n    handleNotifications();\n  }, []);\n  return null;\n};\n\n_s(FirebaseNotificationSetup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FirebaseNotificationSetup;\nexport default FirebaseNotificationSetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseNotificationSetup\");","map":{"version":3,"sources":["C:/Users/devan/Downloads/youtube2022-react-chat/youtube2022-react-chat/src/firebase.js"],"names":["initializeApp","getAuth","getStorage","getFirestore","getMessaging","getToken","onMessage","useEffect","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","requestNotificationPermission","permission","Notification","requestPermission","console","log","error","app","auth","storage","db","messaging","getFCMToken","token","handleNotifications","payload","title","body","notification","FirebaseNotificationSetup"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuBA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAkD,oBAAlD,C,CAAwE;;AACxE,SAASC,SAAT,QAA0B,OAA1B;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,SAAS,EAAE,mBAHU;AAIrBC,EAAAA,aAAa,EAAE,+BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;;AASA,MAAMC,6BAA6B,GAAG,YAAY;AAChD,MAAI;AACF,UAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAb,EAAzB;;AACA,QAAIF,UAAU,KAAK,SAAnB,EAA8B;AAC5BG,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;AACF,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;AACD;AACF,CAXD;;AAYAN,6BAA6B,G,CAC7B;;AACA,OAAO,MAAMO,GAAG,GAAGvB,aAAa,CAACQ,cAAD,CAAzB;AACP,OAAO,MAAMgB,IAAI,GAAGvB,OAAO,EAApB;AACP,OAAO,MAAMwB,OAAO,GAAGvB,UAAU,EAA1B;AACP,OAAO,MAAMwB,EAAE,GAAGvB,YAAY,EAAvB,C,CAEP;;AACA,MAAMwB,SAAS,GAAGvB,YAAY,EAA9B,C,CAEA;AAGA;;AACA,MAAMwB,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMxB,QAAQ,CAACsB,SAAD,CAA5B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,KAA1B;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD;AACF,CAPD,C,CASA;;;AACA,MAAMQ,mBAAmB,GAAG,MAAM;AAChCxB,EAAAA,SAAS,CAACqB,SAAD,EAAaI,OAAD,IAAa;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCU,OAAxC,EADgC,CAEhC;AACA;;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,OAAO,CAACG,YAAhC;AACA,QAAIhB,YAAJ,CAAiBc,KAAjB,EAAwB;AAAEC,MAAAA;AAAF,KAAxB;AACD,GANQ,CAAT;AAOD,CARD,C,CAUA;;;AACA,MAAME,yBAAyB,GAAG,MAAM;AAAA;;AACtC5B,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,6BAA6B;AAC7BY,IAAAA,WAAW;AACXE,IAAAA,mBAAmB;AACpB,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAO,IAAP;AACD,CARD;;GAAMK,yB;;KAAAA,yB;AAUN,eAAeA,yBAAf","sourcesContent":["// import { initializeApp } from \"firebase/app\";\n// import { getAuth } from \"firebase/auth\";\n// import { getStorage } from \"firebase/storage\";\n// import { getFirestore } from \"firebase/firestore\";\n// const API_KEY = process.env.REACT_APP_FIREBASE_KEY\n// const firebaseConfig = {\n//   apiKey: API_KEY,\n//   authDomain: \"chat-engine-8dbde.firebaseapp.com\",\n//   projectId: \"chat-engine-8dbde\",\n//   storageBucket: \"chat-engine-8dbde.appspot.com\",\n//   messagingSenderId: \"654735497077\",\n//   appId: \"1:654735497077:web:e95d3917f9a3035db5653c\",\n//   measurementId: \"G-2355KSKVN7\"\n// };\n// export const app = initializeApp(firebaseConfig);\n// export const auth = getAuth();\n// export const storage = getStorage();\n// export const db = getFirestore()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\"; // Import Firebase Messaging\nimport { useEffect } from \"react\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAhRXYsuWV9ga06Clz3fyadnCApOwuerWk\",\n  authDomain: \"chat-engine-8dbde.firebaseapp.com\",\n  projectId: \"chat-engine-8dbde\",\n  storageBucket: \"chat-engine-8dbde.appspot.com\",\n  messagingSenderId: \"654735497077\",\n  appId: \"1:654735497077:web:e95d3917f9a3035db5653c\",\n  measurementId: \"G-2355KSKVN7\"\n};\nconst requestNotificationPermission = async () => {\n  try {\n    const permission = await Notification.requestPermission();\n    if (permission === \"granted\") {\n      console.log(\"Notification permission granted.\");\n    } else {\n      console.log(\"Notification permission denied.\");\n    }\n  } catch (error) {\n    console.error(\"Error requesting notification permission:\", error);\n  }\n};\nrequestNotificationPermission();\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const storage = getStorage();\nexport const db = getFirestore();\n\n// Initialize Firebase Messaging\nconst messaging = getMessaging();\n\n// Request permission to receive notifications\n\n\n// Get the FCM token for the user\nconst getFCMToken = async () => {\n  try {\n    const token = await getToken(messaging);\n    console.log(\"FCM Token:\", token);\n  } catch (error) {\n    console.error(\"Error getting FCM token:\", error);\n  }\n};\n\n// Handle incoming notifications\nconst handleNotifications = () => {\n  onMessage(messaging, (payload) => {\n    console.log(\"Received a notification:\", payload);\n    // You can customize how to handle the incoming notification here\n    // For example, display a notification to the user\n    const { title, body } = payload.notification;\n    new Notification(title, { body });\n  });\n};\n\n// Component to initialize notification setup\nconst FirebaseNotificationSetup = () => {\n  useEffect(() => {\n    requestNotificationPermission();\n    getFCMToken();\n    handleNotifications();\n  }, []);\n\n  return null;\n};\n\nexport default FirebaseNotificationSetup;\n"]},"metadata":{},"sourceType":"module"}