{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devan\\\\Downloads\\\\youtube2022-react-chat\\\\youtube2022-react-chat\\\\src\\\\components\\\\Message.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = _ref => {\n  _s();\n\n  let {\n    message\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const ref = useRef();\n  useEffect(() => {\n    var _ref$current;\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [message]);\n  const currentDate = new Date();\n  const previousDate = new Date(dated); // Calculate the time difference in milliseconds\n\n  const timeDifference = currentDate - previousDate; // Define a threshold (e.g., 5 seconds) for considering it \"Just now\"\n\n  const threshold = 5000; // 5000 milliseconds (5 seconds)\n\n  if (timeDifference <= threshold) {\n    dated = \"Just now\";\n  } else {\n    // Format the date as hours and minutes\n    dated = previousDate.getHours() + \":\" + previousDate.getMinutes();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `message ${message.senderId === currentUser.uid && \"owner\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: message.senderId === currentUser.uid ? currentUser.photoURL : data.user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), message.img && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: message.img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"9uELNj1C6SlzVSDaQLsQuENKLwo=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/devan/Downloads/youtube2022-react-chat/youtube2022-react-chat/src/components/Message.jsx"],"names":["React","useContext","useEffect","useRef","AuthContext","ChatContext","Message","message","currentUser","data","ref","current","scrollIntoView","behavior","currentDate","Date","previousDate","dated","timeDifference","threshold","getHours","getMinutes","senderId","uid","photoURL","user","text","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,OAAO,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAkBP,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWR,UAAU,CAACI,WAAD,CAA3B;AAEA,QAAMK,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,oBAAAQ,GAAG,CAACC,OAAJ,8DAAaC,cAAb,CAA4B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA5B;AACD,GAFQ,EAEN,CAACN,OAAD,CAFM,CAAT;AAGA,QAAMO,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,QAAMC,YAAY,GAAG,IAAID,IAAJ,CAASE,KAAT,CAArB,CAV+B,CAY/B;;AACA,QAAMC,cAAc,GAAGJ,WAAW,GAAGE,YAArC,CAb+B,CAe/B;;AACA,QAAMG,SAAS,GAAG,IAAlB,CAhB+B,CAgBP;;AAExB,MAAID,cAAc,IAAIC,SAAtB,EAAiC;AAC/BF,IAAAA,KAAK,GAAG,UAAR;AACD,GAFD,MAEO;AACL;AACAA,IAAAA,KAAK,GAAGD,YAAY,CAACI,QAAb,KAA0B,GAA1B,GAAgCJ,YAAY,CAACK,UAAb,EAAxC;AACD;;AAED,sBACE;AACE,IAAA,GAAG,EAAEX,GADP;AAEE,IAAA,SAAS,EAAG,WAAUH,OAAO,CAACe,QAAR,KAAqBd,WAAW,CAACe,GAAjC,IAAwC,OAAQ,EAFxE;AAAA,4BAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,GAAG,EACDhB,OAAO,CAACe,QAAR,KAAqBd,WAAW,CAACe,GAAjC,GACIf,WAAW,CAACgB,QADhB,GAEIf,IAAI,CAACgB,IAAL,CAAUD,QAJlB;AAME,QAAA,GAAG,EAAC;AANN;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAeE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,kBAAIV,OAAO,CAACmB;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,EAEGnB,OAAO,CAACoB,GAAR,iBAAe;AAAK,QAAA,GAAG,EAAEpB,OAAO,CAACoB,GAAlB;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA/CD;;GAAMrB,O;;KAAAA,O;AAiDN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\n\nconst Message = ({ message }) => {\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [message]);\n  const currentDate = new Date();\n  const previousDate = new Date(dated);\n  \n  // Calculate the time difference in milliseconds\n  const timeDifference = currentDate - previousDate;\n  \n  // Define a threshold (e.g., 5 seconds) for considering it \"Just now\"\n  const threshold = 5000; // 5000 milliseconds (5 seconds)\n  \n  if (timeDifference <= threshold) {\n    dated = \"Just now\";\n  } else {\n    // Format the date as hours and minutes\n    dated = previousDate.getHours() + \":\" + previousDate.getMinutes();\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={`message ${message.senderId === currentUser.uid && \"owner\"}`}\n    >\n      <div className=\"messageInfo\">\n        <img\n          src={\n            message.senderId === currentUser.uid\n              ? currentUser.photoURL\n              : data.user.photoURL\n          }\n          alt=\"\"\n        />\n        <span>{dated}</span>\n      </div>\n      <div className=\"messageContent\">\n        <p>{message.text}</p>\n        {message.img && <img src={message.img} alt=\"\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}